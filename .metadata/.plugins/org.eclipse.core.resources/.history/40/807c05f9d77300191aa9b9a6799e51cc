package it.danilo.main;

import it.danilo.email.Email;
import it.danilo.email.EmailFactory;
import it.danilo.email.EmailService;
import it.danilo.email.EmailServiceImpl;
import it.danilo.util.Constants;

//Imagine you had to write an email client for sending emails with different characteristics and you came up with a basic public contract like the one below: 
//
//public interface EmailService {
//
//    void send(Email email);
//
//}
//
//The emails can be sent as plain text or as HTML and emails, which are sent outside the company servers need to be logged and have a disclaimer added to the end.
//What is worse, the emails could also be encrypted with AES or DES, or even both at the same time.  
//Your boss tells you that in case there are problems when sending the emails you should retry the sending operation up to three times.
//
//Design a simple client with the accompanying class(es) which you consider to be necessary and write a short program inside the standard void main(String[] args) function that would implement
//the following scenarios by making use of your class(es):
//
//-          sending a plain text email to an outside resource, with a disclaimer added at the end, unencrypted and no retry
//
//-          sending an HTML email to an internal server (so without the disclaimer), encrypted with DES, with the retry functionality
//
//-          sending an HTML email to an outside resource, with a disclaimer added at the end and encrypted with AES with retries in case of errors
//
//-          sending a plain text email to an outside resource and encrypted first with DES and then with AES

public class MainTask {
	
	
	public static void main(String[] args) {
		EmailService es=new EmailServiceImpl();
		//change scenario based on some rule..
		Email email=EmailFactory.getEmail(Constants.SCENARIO1);
		try {
			es.sendEmail(email);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
