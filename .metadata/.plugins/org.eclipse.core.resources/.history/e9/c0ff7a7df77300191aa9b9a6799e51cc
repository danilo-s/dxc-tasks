package it.danilo.email;

import it.danilo.encryption.EncryptionType;
import it.danilo.util.Constants;
import it.danilo.util.MailUtility;

public class EmailFactory {

	public static Email getEmail(String scenario1) {
		Email result=null;
		StringBuilder bodyBuilder = new StringBuilder();

		switch (scenario1) {
		case Constants.SCENARIO1:
			//sending a plain text email to an outside resource, with a disclaimer added at the end, unencrypted and no retry
			bodyBuilder.append(MailUtility.getPropertyValue("email.plain_body"));
			bodyBuilder.append(MailUtility.getPropertyValue("email.plain_disclaimer"));
			result=new Email(bodyBuilder.toString(), BodyType.PLAIN_TEXT, false);
			break;
		case Constants.SCENARIO2:
			//sending an HTML email to an internal server (so without the disclaimer), encrypted with DES, with the retry functionality
			bodyBuilder.append(MailUtility.getPropertyValue("email.html_body"));
			String encryptedBody=MailUtility.encryptBody(bodyBuilder, EncryptionType.DES);
			result=new Email(encryptedBody, BodyType.HTML, true);
			break;
		case Constants.SCENARIO3:
			//sending an HTML email to an outside resource, with a disclaimer added at the end and encrypted with AES with retries in case of errors
			result=new Email(BodyType.HTML, true, true, EncryptionType.AES);
			break;
		case Constants.SCENARIO4:
			//sending a plain text email to an outside resource and encrypted first with DES and then with AES
			result=new Email(BodyType.PLAIN_TEXT, true, false, EncryptionType.DES_AES);
			break;
		default:
			//add other scenarios..
			break;
		}
		return result;
	}
	
	

}
