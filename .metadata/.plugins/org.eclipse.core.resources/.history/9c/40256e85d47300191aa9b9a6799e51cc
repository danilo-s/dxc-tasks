package it.danilo.util;

import javax.crypto.Cipher;
import javax.crypto.SecretKey;

import com.sun.mail.util.BASE64DecoderStream;
import com.sun.mail.util.BASE64EncoderStream;

public class DESEncryption {
	
	private static Cipher ecipher;
    private static Cipher dcipher;
 
    private static SecretKey key;
    
    private static void setKey() {
        key = KeyGenerator.getInstance("DES").generateKey();
        ecipher = Cipher.getInstance("DES");
        dcipher = Cipher.getInstance("DES");
        ecipher.init(Cipher.ENCRYPT_MODE, key);
        
        dcipher.init(Cipher.DECRYPT_MODE, key);
    }
 
 
    public static String encrypt(String str) {
 
  try {

 
    byte[] utf8 = str.getBytes("UTF8");
 
byte[] enc = ecipher.doFinal(utf8);
 
// encode to base64
 
enc = BASE64EncoderStream.encode(enc);
 
return new String(enc);
 
  }
 
  catch (Exception e) {
 
    e.printStackTrace();
 
  }
 
  return null;
 
    }
 
    public static String decrypt(String str) {
 
  try {
 
    // decode with base64 to get bytes
 
byte[] dec = BASE64DecoderStream.decode(str.getBytes());
 
byte[] utf8 = dcipher.doFinal(dec);
 
// create new string based on the specified charset
 
return new String(utf8, "UTF8");
 
  }
 
  catch (Exception e) {
 
    e.printStackTrace();
 
  }
 
  return null;
 
    }
 
}


}
