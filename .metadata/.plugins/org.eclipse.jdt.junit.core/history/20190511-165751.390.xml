<?xml version="1.0" encoding="UTF-8"?><testrun name="MainTaskTest" project="Task1" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testsuite name="it.danilo.main.MainTaskTest" time="0.002">
    <testcase name="initializationError" classname="it.danilo.main.MainTaskTest" time="0.002">
      <error>java.lang.OutOfMemoryError: Java heap space&#13;
	at java.base/java.util.Arrays.copyOf(Unknown Source)&#13;
	at java.base/java.lang.AbstractStringBuilder.ensureCapacityInternal(Unknown Source)&#13;
	at java.base/java.lang.AbstractStringBuilder.append(Unknown Source)&#13;
	at java.base/java.lang.StringBuilder.append(Unknown Source)&#13;
	at it.danilo.main.MainTaskTest.stringGenerator(MainTaskTest.java:40)&#13;
	at it.danilo.main.MainTaskTest.data(MainTaskTest.java:24)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.runners.Parameterized.allParameters(Parameterized.java:280)&#13;
	at org.junit.runners.Parameterized.&lt;init&gt;(Parameterized.java:248)&#13;
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)&#13;
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)&#13;
	at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:104)&#13;
	at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:86)&#13;
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)&#13;
	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)&#13;
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)&#13;
	at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createUnfilteredTest(JUnit4TestLoader.java:87)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createTest(JUnit4TestLoader.java:73)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.loadTests(JUnit4TestLoader.java:46)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:522)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
